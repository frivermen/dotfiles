file = io.popen("nproc")
ncpus = file:read("*n")
file:close()

w = 160
cols = 3
barlen = (w // cols) - 1
showcpu = ""
for i = 1,ncpus do
  showcpu = showcpu.."${cpubar cpu"..i.." 10,"..barlen.."}"
  if i % cols == 0 then
    if i ~= ncpus then showcpu = showcpu.."\n" end
  else
    showcpu = showcpu.."${offset 2}"
  end
end

local function interp (s)
    return s:gsub("#{drawcpus}", showcpu)
end

conky.config = {
    background = true,
    update_interval = 1.0,

    alignment = 'bottom_right',
    use_xft = true,
    font = 'Terminus:size=12',
    gap_x = 30,
    gap_y = 90,
    minimum_width = w,
    border_inner_margin = 5,

    default_bar_height = 10,
    default_bar_width = 0,
    default_graph_height = 50,
    default_graph_width = 0,
    show_graph_scale = true,
    short_units = true,

    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'utility',
    own_window_hints = 'above',
    own_window_transparent = true,
    own_window_argb_visual = true,
    own_window_argb_value = 255,

    default_color = '7f7f7f',
    draw_shades = false,
    double_buffer = true,
}

conky.text = interp([[
CPU: ${hwmon 1 temp 1}C ${freq_g}GHz $alignr$cpu%
#{drawcpus}
$alignc${freq_g 1}GHz ${freq_g 2}GHz
$alignc${freq_g 3}GHz ${freq_g 4}GHz
$alignc${freq_g 5}GHz ${freq_g 6}GHz
${cpugraph}
/: ${fs_used_perc /}% ${alignr}av. ${fs_free /}
${diskiograph /dev/sdb}
/1tb: ${fs_used_perc /1tb}% ${alignr}av. ${fs_free /1tb}
${diskiograph /dev/sda}
RAM: $memperc% ${alignr}$mem/$memmax
$membar
Swap: $swapperc% ${alignr}$swap/$swapmax
$swapbar
]])
